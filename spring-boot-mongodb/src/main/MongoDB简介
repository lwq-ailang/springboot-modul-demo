MongoDB是一个基于分布式文件存储的数据库，它是一个介于关系数据库和非关系数据库之间的产品，
其主要目标是在键/值存储方式（提供了高性能和高度伸缩性）和传统的RDBMS系统（具有丰富的功能）之间架起一座桥梁，它集两者的优势于一身。

MongoDB支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型，也因为他的存储格式也使得它所存储的数据在Nodejs程序应用中使用非常流畅。

既然称为NoSQL数据库，Mongo的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。

但是，MongoDB也不是万能的，同MySQL等关系型数据库相比，它们在针对不同的数据类型和事务要求上都存在自己独特的优势。
在数据存储的选择中，坚持多样化原则，选择更好更经济的方式，而不是自上而下的统一化。

较常见的，我们可以直接用MongoDB来存储键值对类型的数据，
    如：验证码、Session等；由于MongoDB的横向扩展能力，也可以用来存储数据规模会在未来变的非常巨大的数据，
    如：日志、评论等；由于MongoDB存储数据的弱类型，也可以用来存储一些多变json数据，
    如：与外系统交互时经常变化的JSON报文。
    如：而对于一些对数据有复杂的高事务性要求的操作，账户交易等就不适合使用MongoDB来存储。

优点:
    1.文档结构的存储方式，能够更便捷的获取数据
    2.内置GridFS，支持大容量的存储
        GridFS是一个出色的分布式文件系统，可以支持海量的数据存储。
        内置了GridFS了MongoDB，能够满足对大数据集的快速范围查询。
    3.海量数据下，性能优越
        在使用场合下，千万级别的文档对象，近10G的数据，对有索引的ID的查询不会比mysql慢，而对非索引字段的查询，则是全面胜出。
        mysql实际无法胜任大数据量下任意字段的查询，而mongodb的查询性能优越。写入性能同样很令人满意，同样写入百万级别的数据，mongodb比我以前试用过的couchdb要快得多，基本10分钟以下可以解决。
    4.动态查询
    5.全索引支持,扩展到内部对象和内嵌数组
        索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。
        这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。
        索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构。
    6.查询记录分析
    7.快速,就地更新
    8.高效存储二进制大对象 (比如照片和视频)
    9.复制（复制集）和支持自动故障恢复
    10.内置 Auto- Sharding 自动分片支持云级扩展性，分片简单
        提供基于Range的Auto Sharding机制：
        一个collection可按照记录的范围，分成若干个段，切分到不同的Shard上。
        Shards可以和复制结合，配合Replica sets能够实现Sharding+fail-over，不同的Shard之间可以负载均衡。
        查询是对客户端是透明的。客户端执行查询，统计，MapReduce等操作，这些会被MongoDB自动路由到后端的数据节点。
        这让我们关注于自己的业务，适当的 时候可以无痛的升级。MongoDB的Sharding设计能力最大可支持约20 petabytes，足以支撑一般应用。
        这可以保证MongoDB运行在便宜的PC服务器集群上。PC集群扩充起来非常方便并且成本很低，避免了“sharding”操作的复杂性和成本。
    11.MapReduce 支持复杂聚合
        MongoDB中聚合(aggregate)主要用于处理数据(诸如统计平均值,求和等)，并返回计算后的数据结果。有点类似sql语句中的 count(*)。

缺点:
    1.不支持事务操作
        所以事务要求严格的系统（如果银行系统）肯定不能用它。
    2.MongoDB 占用空间过大 （不过这个确定对于目前快速下跌的硬盘价格来说，也不算什么缺点了）
      关于其原因，在官方的FAQ中，提到有如下几个方面：
        1、空间的预分配：为避免形成过多的硬盘碎片，mongodb每次空间不足时都会申请生成一大块的硬盘空间，而且申请的量从64M、128M、256M那 样的指数递增，直到2G为单个文件的最大体积。随着数据量的增加，你可以在其数据目录里看到这些整块生成容量不断递增的文件。
        2、字段名所占用的空间：为了保持每个记录内的结构信息用于查询，mongodb需要把每个字段的key-value都以BSON的形式存储，如果 value域相对于key域并不大，比如存放数值型的数据，则数据的overhead是最大的。一种减少空间占用的方法是把字段名尽量取短一些，这样占用 空间就小了，但这就要求在易读性与空间占用上作为权衡了。
        3、删除记录不释放空间：这很容易理解，为避免记录删除后的数据的大规模挪动，原记录空间不删除，只标记“已删除”即可，以后还可以重复利用。
        4、可以定期运行db.repairDatabase()来整理记录，但这个过程会比较缓慢
        MongoDB没有如MySQL那样成熟的维护工具，这对于开发和IT运营都是个值得注意的地方。
    3.MongoDB没有如MySQL那样成熟的维护工具
    4.无法进行关联表查询，不适用于关系多的数据
    5.复杂聚合操作通过mapreduce创建，速度慢
    6.模式自由,自由灵活的文件存储格式带来的数据错
    7.MongoDB 在你删除记录后不会在文件系统回收空间。除非你删掉数据库。但是空间没有被浪费
